dm_02.cpp——一个简单的开闭原则实现案例
	类的改动是通过扩展代码实现，而不是修改源代码

dm_03.cpp——一个简单的依赖倒置原则实现案例
	框架和实现层均向中间层(协议层/抽象层)靠拢，依赖抽象接口，不依赖具体实现，针对
接口编程

dm_04.cpp——懒汉式单例模式实现

dm_05.cpp——饿汉式单例模式实现

dm_06.cpp——使用C++11改进单例模式
	其实也就是利用可变参数模板特性，避免了我们重复书写构造函数的模板定义

dm_07.cpp——简单工厂模式的实现 
	简单工厂模式并非标准设计模式，因为它并不符合开闭原则,但使用比较多	

dm_08.cpp——工厂模式的实现
	比简单工厂模式多了一个抽象工厂角色，可以使系统在不修改具体工厂 角色的
情况下引入新的产品。

dm_09.cpp——抽象工厂模式的实现
	一个工厂可以生产一个产品族，即可以生产香蕉、苹果等

dm_10.cpp——Builder模式的实现
	分步创建对象

dm_11.cpp——Prototype模式的实现
	让对象本身具有克隆的功能
